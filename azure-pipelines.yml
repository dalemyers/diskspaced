jobs:
  - job: "Test"
    pool:
      vmImage: "macOS-10.15"
    strategy:
      matrix:
        Python36:
          python.version: "3.6"
        Python37:
          python.version: "3.7"
      maxParallel: 4

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
          architecture: "x64"

      - script: curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
        displayName: Install Poetry

      - script: python -m venv $(System.DefaultWorkingDirectory)/venv
        displayName: Create virtual environment

      - script: |
          source venv/bin/activate
          $HOME/.poetry/bin/poetry install
        displayName: "Install dependencies"

      - script: source venv/bin/activate
          python -m black --check
        displayName: "Run Black"

      - script: source venv/bin/activate
          python -m pylint --rcfile=pylintrc diskspaced
        displayName: "Lint"

      - script: source venv/bin/activate
          python -m mypy --ignore-missing-imports diskspaced/
        displayName: "Type Check"

      - script: |
          source venv/bin/activate
          python -m pytest tests --cov=diskspaced --cov-report html --cov-report xml --doctest-modules --junitxml=junit/test-results.xml
        displayName: "pytest"

      - script: |
          source venv/bin/activate
          python inlinecss.py htmlcov
        displayName: "Inline CSS"

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "**/test-results.xml"
          testRunTitle: "Python $(python.version)"
        condition: succeededOrFailed()

      # Publish Code Coverage Results
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: "cobertura"
          summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml
          reportDirectory: $(System.DefaultWorkingDirectory)/htmlcov
